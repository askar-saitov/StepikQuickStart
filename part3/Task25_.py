# такое решение не проходит по времени
# так как сложность O(n*k)

n, k = map(int, input().split())
z = [0] + list(map(int, list(input())))
d = 1000000007

a = [1] + [0] * n
q = [1] + [0] * n
a[1] = 0 if z[1] == 1 else 1
q[1] = a[1]

for i in range(2, n + 1):
    if z[i] == 1:
        a[i] = 0
        q[i] = 0
    else:
        ng = i-k-1 if i-k-1 >=0 else 0
        a[i] = q[i-1] - q[ng]
        a[i] %= d
        q[i] = a[i]

print(a[n])


'''
КузнечиК
Перед клетчатой полоской длины n сидит кузнечик. Каждая клетка является либо занятой, либо свободной. Кузнечик умеет прыгать на 1, 2, … k клеток вперед. Найдите количество различных путей, которыми он может добраться до последней клетки, не заходя в занятые.
Входные данные
В первой строке записано два целых числа n, k (1<=k<=n<=5*10^5).
Во второй строке записана строка длины n, состоящая только из нулей и единиц. Ноль обозначает свободную клетку, а единица - занятую.
Выходные данные
Выведите единственное число - количество способов добраться до последней клетки. Поскольку это число может быть очень большим, выведите его по модулю 10^9 + 7.
Sample Input 1:
8 3
01100010
Sample Output 1:
3
Sample Input 2:
8 3
00000001
Sample Output 2:
0
Sample Input 3:
8 4
00111000
Sample Output 3:
4
'''
